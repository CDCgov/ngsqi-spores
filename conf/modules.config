/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
    ]

    withName: 'SAMPLESHEET_CHECK' {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename ->
                if (filename.equals('versions.yml')) {
                    return null
                } else {
                    def newName = filename.replace('_T1', '')
                    return newName
                }
            }
        ]
    }
    withName: 'FASTA_CHECK' {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename ->
                if (filename.equals('versions.yml')) {
                    return null
                } else {
                    def newName = filename.replace('_T1', '')
                    return newName
                }
            }
        ]
    }
    withName: 'REF_FORMAT' {
        publishDir = [
            enabled: false,
            saveAs: { filename ->
                if (filename.equals('versions.yml')) {
                    return null
                } else {
                    def newName = filename.replace('_T1', '')
                    return newName
                }
            }
        ]
    }
    withName: FASTA_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename ->
                if (filename.equals('versions.yml')) {
                    return null
                } else {
                    def newName = filename.replace('_T1', '')
                    return newName
                }
            }
        ]
    }
    withName: 'NUCMER' {
        ext.args         = { "--maxmatch --nosimplify" }
        publishDir       = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/reference/masked" },
            pattern: "*.{coords}"
        ]
    }
     withName: 'COORDSTOBED' {
        publishDir = [
            path: { "${params.outdir}/reference/masked" },
            mode: params.publish_dir_mode,
            pattern: "*.bed"
        ]
    }
    withName: 'BEDTOOLS_MASKFASTA' {
        publishDir = [
            path: { "${params.outdir}/reference/masked" },
            mode: params.publish_dir_mode,
            pattern: "*.fa"
        ]
    }
    withName: 'BWA_INDEX' {
        publishDir       = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/reference/" }
        ]
    }
    withName: 'SAMTOOLS_FAIDX' {
        publishDir       = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/reference/fai" },
            pattern: "*{fai}"
        ]
    }

    withName: 'PICARD_CREATESEQUENCEDICTIONARY' {
        publishDir       = [
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/reference/dict" },
            pattern: "*.{dict}"
        ]
    }
    withName: 'CHOPPER' {
        ext.args2 = [
            '-q 7',
            '-l 1000'
        ].join(' ').trim()
        publishDir = [
            enabled: false
        ]
        ext.prefix = { "${meta.id}_chopped" }

    }
    withName: 'CUSTOM_DUMPSOFTWAREVERSIONS' {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }
    withName: NANOQC {
        publishDir = [
            [
            path: { "${params.outdir}/qc/raw/nanoqc/${meta.id}/logs/" },
            mode: params.publish_dir_mode,
            pattern: "*.{log, yml}"
            ],
            [
            path: { "${params.outdir}/qc/raw/nanoqc/${meta.id}/reports/" },
            mode: params.publish_dir_mode,
            pattern: '*.html'
            ]
        ]
    }
    withName: NANOCOMP {
        publishDir = [
            [
            path: { "${params.outdir}/qc/raw/nanocomp/${meta.id}/logs/" },
            mode: params.publish_dir_mode,
            pattern: "*.{txt, yml}"
            ],
            [
            path: { "${params.outdir}/qc/raw/nanocomp/${meta.id}/reports/" },
            mode: params.publish_dir_mode,
            pattern: '*.html'
            ]
        ]
    }
    withName: NANOPLOT {
        publishDir = [
            [
            path: { "${params.outdir}/qc/raw/nanoplot/${meta.id}/logs/" },
            mode: params.publish_dir_mode,
            pattern: "*.{txt, log, yml}"
            ],
            [
            path: { "${params.outdir}/qc/raw/nanoplot/${meta.id}/reports/" },
            mode: params.publish_dir_mode,
            pattern: '*.html'
            ],
            [
            path: { "${params.outdir}/qc/raw/nanoplot/${meta.id}/figures/" },
            mode: params.publish_dir_mode,
            pattern: '*.png'
            ]
        ]
    }
    withName: SPORES:QC_CLEAN:NANOQC {
        publishDir = [
            [
            path: { "${params.outdir}/qc/clean/nanoqc/${meta.id}/logs/" },
            mode: params.publish_dir_mode,
            pattern: "*.{log, yml}"
            ],
            [
            path: { "${params.outdir}/qc/clean/nanoqc/${meta.id}/reports/" },
            mode: params.publish_dir_mode,
            pattern: '*.html'
            ]
        ]
    }
    withName: SPORES:QC_CLEAN:NANOCOMP {
        publishDir = [
            [
            path: { "${params.outdir}/qc/clean/nanocomp/${meta.id}/logs/" },
            mode: params.publish_dir_mode,
            pattern: "*.{txt, yml}"
            ],
            [
            path: { "${params.outdir}/qc/clean/nanocomp/${meta.id}/reports/" },
            mode: params.publish_dir_mode,
            pattern: '*.html'
            ]
        ]
    }
    withName: 'SPORES:QC_CLEAN:NANOPLOT' {
        publishDir = [
            [
            path: { "${params.outdir}/qc/clean/nanoplot/${meta.id}/logs/" },
            mode: params.publish_dir_mode,
            pattern: "*.{txt, log, yml}"
            ],
            [
            path: { "${params.outdir}/qc/clean/nanoplot/${meta.id}/reports/" },
            mode: params.publish_dir_mode,
            pattern: '*.html'
            ],
            [
            path: { "${params.outdir}/qc/clean/nanoplot/${meta.id}/figures/" },
            mode: params.publish_dir_mode,
            pattern: '*.png'
            ]
        ]
    }
    withName: REFDOWNLOAD {
        publishDir = [
            enabled: false
        ]
    }
    withName: ALTREFERENCE {
        publishDir = [
            path: { "${params.outdir}/simulation/alt_reference/" },
            mode: params.publish_dir_mode
        ]
    }
    withName: 'SEQTK_SAMPLE' {
        publishDir = [
            enabled: false
        ]
    }
    withName: 'SHORTENHEADERS' {
        publishDir = [
            enabled: false
        ]
    }
    withName: 'READANALYSIS' {
        publishDir = [
            enabled: false
        ]
    }
    withName: 'NGSQI_SPORES:SPORES:VARIANT_CALLING:MEDAKA' {
        publishDir = [
            path: { "${params.outdir}/variant/medaka" },
            mode: params.publish_dir_mode
        ]
    }
    withName: 'NGSQI_SPORES:SPORES:VARIANT_ANNOTATION:SNPEFF_SNPEFF' {
        publishDir = [
            path: { "${params.outdir}/variant/annotated/" },
            mode: params.publish_dir_mode
        ]
    }
    withName: 'NGSQI_SPORES:SPORES:PHYLOGENY_PREP:BCFTOOLS_SORT' {
        publishDir = [
            path: { "${params.outdir}/variant/sorted/" },
            mode: params.publish_dir_mode
        ]
    }
    withName: 'NGSQI_SPORES:SPORES:PHYLOGENY_PREP:BCFTOOLS_MERGE' {
        publishDir = [
            path: { "${params.outdir}/variant/consensus/" },
            mode: params.publish_dir_mode
        ]
    }
    withName: 'NGSQI_SPORES:SPORES:PHYLOGENY_PREP:BCFTOOLS_CONSENSUS' {
        publishDir = [
            path: { "${params.outdir}/variant/consensus/" },
            mode: params.publish_dir_mode
        ]
    }
    withName: 'NGSQI_SPORES:SPORES:PHYLOGENY_PREP:COMBINE_CONSENSUS' {
        publishDir = [
            path: { "${params.outdir}/variant/consensus/" },
            mode: params.publish_dir_mode
        ]
    }
    withName: 'NANOSIMSIMULATION' {
        publishDir = [
            [
                path: { "${params.outdir}/simulation/nanosim/reads/${sample_id}_${ID}_${clade}_${var_id}/" },
                mode: 'copy',
                pattern: '*.fastq.gz'
            ],
            [
                path: { "${params.outdir}/simulation/nanosim/logs/${sample_id}_${ID}_${clade}_${var_id}/" },
                mode: 'copy',
                pattern: '*.log'
            ]
        ]
    }
    withName: 'NGSQI_SPORES:SPORES:QC_SIM:NANOQC' {
        publishDir = [
            [
            path: { "${params.outdir}/simulation/qc/nanoqc/${meta.id}/logs/" },
            mode: params.publish_dir_mode,
            pattern: "*.{log, yml}"
            ],
            [
            path: { "${params.outdir}/simulation/qc/nanoqc/${meta.id}/reports/" },
            mode: params.publish_dir_mode,
            pattern: '*.html'
            ]
        ]
    }
    withName: 'NGSQI_SPORES:SPORES:QC_SIM:NANOCOMP' {
        publishDir = [
            [
            path: { "${params.outdir}/simulation/qc/nanocomp/${meta.id}/logs/" },
            mode: params.publish_dir_mode,
            pattern: "*.{txt, yml}"
            ],
            [
            path: { "${params.outdir}/simulation/qc/nanocomp/${meta.id}/reports/" },
            mode: params.publish_dir_mode,
            pattern: '*.html'
            ]
        ]
    }
    withName: 'NGSQI_SPORES:SPORES:QC_SIM:NANOPLOT' {
        publishDir = [
            [
            path: { "${params.outdir}/simulation/qc/nanoplot/${meta.id}/logs/" },
            mode: params.publish_dir_mode,
            pattern: "*.{txt, log, yml}"
            ],
            [
            path: { "${params.outdir}/simulation/qc/nanoplot/${meta.id}/reports/" },
            mode: params.publish_dir_mode,
            pattern: '*.html'
            ],
            [
            path: { "${params.outdir}/simulation/qc/nanoplot/${meta.id}/figures/" },
            mode: params.publish_dir_mode,
            pattern: '*.png'
            ]
        ]
    }
            if (params.postsim) {
            process {
            withName: 'NGSQI_SPORES:SPORES:VARIANT_SIM:MEDAKA' {
                publishDir = [
                    path: { "${params.outdir}/simulation/variant/medaka" },
                    mode: params.publish_dir_mode
                ]
            }
            withName: 'NGSQI_SPORES:SPORES:VARIANT_ANN_SIM:SNPEFF_SNPEFF' {
                publishDir = [
                    path: { "${params.outdir}/simulation/variant/annotated" },
                    mode: params.publish_dir_mode
                    ]
            }
            withName: 'NGSQI_SPORES:SPORES:PHYLOGENY_PREP_SIM:BCFTOOLS_SORT' {
                publishDir = [
                    path: { "${params.outdir}/simulation/variant/sorted/" },
                    mode: params.publish_dir_mode
                    ]
            }
            withName: 'NGSQI_SPORES:SPORES:PHYLOGENY_PREP_SIM:BCFTOOLS_MERGE' {
                publishDir = [
                    path: { "${params.outdir}/simulation/variant/consensus/" },
                    mode: params.publish_dir_mode
                ]
            }
            withName: 'NGSQI_SPORES:SPORES:PHYLOGENY_PREP_SIM:BCFTOOLS_CONSENSUS' {
                publishDir = [
                    path: { "${params.outdir}/simulation/variant/consensus/" },
                    mode: params.publish_dir_mode
                ]
            }
            withName: 'NGSQI_SPORES:SPORES:PHYLOGENY_PREP_SIM:COMBINE_CONSENSUS' {
                publishDir = [
                    path: { "${params.outdir}/simulation/variant/consensus/" },
                    mode: params.publish_dir_mode
                ]
            }
        }
    }
}

